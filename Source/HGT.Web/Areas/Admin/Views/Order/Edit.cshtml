@model Order
@using HGT.Admin
@using Kendo.Mvc.UI
@using HGT.Core
@using HGT.Core.Enums
@using HGT.Entities.Models
@using HGT.Core.Models;

@{
    ViewBag.Title = "Edit order";
    string save = "save";
    string back = "back";

    var orderStatus = new List<SelectListItem>()
    {
         new SelectListItem(){Value  = ((int)StatusType.New).ToString(), Text = "New"},
         new SelectListItem(){Value  = ((int)StatusType.Process).ToString(), Text = "Process"},
         new SelectListItem(){Value  = ((int)StatusType.Completed).ToString(), Text = "Completed"},
         new SelectListItem(){Value  = ((int)StatusType.Cancel).ToString(), Text = "Cancel"}
    };

    var orderDetails = ViewBag.OrderDeteails as List<OrderDetailModel>;
    var checkShowTotal = true;     
}

<div class="row">
    <div class="col-lg-12">
        <div class="page-header">
            <h1>@ViewBag.Title</h1>
            <div class="navbar-right" style="margin-top: -56px;">
                <button type="submit" class="btn btn-primary btnSave"><i class="fa  fa-save fa-fw"></i>@save</button>
                <button type="button" class="btn btn-primary" onclick="cancel();"><i class="fa fa-undo fa-fw"></i>@back</button>
            </div>
        </div>
    </div>
</div>
<!-- /.row -->
@using (Html.BeginForm("Edit", "Order", FormMethod.Post, new { @id = "editForm" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)

    <div class="row">
        <div class="col-lg-6">
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerName) <span>*</span>
                @Html.TextBoxFor(model => model.CustomerName, new { @class = "form-control", tabindex = "1" })
                <p class="help-block">
                    @Html.ValidationMessageFor(model => Model.CustomerName, null, new { @class = "" })
                </p>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Phone)
                @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", tabindex = "1" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email)
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", tabindex = "1" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Address)
                @Html.TextBoxFor(model => model.Address, new { @class = "form-control", tabindex = "1" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.OrderStatusId)
                @Html.DropDownListFor(model => model.OrderStatusId, orderStatus, null, new { @class = "form-control", tabindex = "10" })
            </div>
        </div>
        <div class="col-lg-6">
            <table class="orderDetail">
                <tr>
                    <th class="title">Product</th>
                    <th class="quantity">Quantity</th>
                    <th class="price">Price</th>
                </tr>

                @foreach (var item in orderDetails)
                {

                    var pathFile = Globals.ThumbPath(ConstantKeys.ProductFolder, item.Product.Picture);



                    <tr id="row-@item.ProductId" >
                        <td class="title">
                            @*<img class="removeLink" data-id="@item.ProductId" data-callPrice="@item.Product.CallPrice" src="@Url.Content("~/userfiles/images/remove-20.png")" alt="" />*@
                            @item.Product.Name
                        </td>
                        <td class="quantity">
                            @item.Quantity
                        </td>
                        <td class="price">
                            @if (item.Product.CallPrice || item.Product.Price.Equals(0))
                            {
                                checkShowTotal = false;

                                <span>Call</span>
                            }
                            else
                            { 

                                <span>@item.Product.Price.ToString("#,###") đ</span>
                            }
                        </td>
                    </tr>
                }
                @if (checkShowTotal)
                {    
                    <tr class="totalOrder">
                        <td class="title"></td>
                        <td class="quantity">Total</td>
                        <td class="price">
                            @Model.Total.Value.ToString("#,###") đ                    
                        </td>
                    </tr>
                }
            </table>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12" style="text-align: right">
            <button type="submit" class="btn btn-primary btnSave"><i class="fa  fa-save fa-fw"></i>@save</button>
            <button type="button" class="btn btn-primary" onclick="cancel();"><i class="fa fa-undo fa-fw"></i>@back</button>
        </div>
    </div>
    
    <div class="clearfix mb10"></div>
}
<!-- /.row -->
@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            var validatable = $("#editForm").kendoValidator().data("kendoValidator");

            $('.btnSave').click(function () {

                if (validatable.validate() === false) {
                    return false;
                }

                $.ajax({
                    url: "/admin/order/Edit",
                    type: "POST",
                    data: $('#editForm').serialize(),
                    dataType: 'json',
                    cache: false,
                    async: false,
                    success: function (data) {
                        if (data.Status == 1)
                            ConfirmMessageBox(null, data.Message, onClosePopup, false);
                        else
                            ConfirmMessageBox(null, data.Message, function () { }, false);
                    },
                    complete: function () { }
                });
                return false;
            });

            $('#editForm').submit(function () {
                return false;
            })
        });

        function cancel() {
            var siteUrl = null;
            siteUrl = "/admin/order/";
            window.location = siteUrl;
            return false;

        }

        //event enter
        function keypressHandler(e) {
            if (e.which == 13) {
                $(this).blur();
                $('.btnSave').focus().click();//give your submit an ID
            }
        }
        $('#editForm').keypress(keypressHandler);
        //       

        function onClosePopup(e) {
            window.location = "/admin/order/";
        }

    </script>
}