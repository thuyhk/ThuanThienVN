@model HGT.Admin.Models.NewsModel
@using HGT.Admin;
@using Kendo.Mvc.UI;
@{
    ViewBag.Title = "Add news";
    string save = "Save";
    string reset = "Reset";
}

@section styles
{
    <style type="text/css">
        #imgLogo, #imgUploaded {
            max-height: 120px;
        }

        .profile-info-row select {
            width: 99%;
            height: 24px;
            border: 0;
            padding: 2px 5px !important;
        }
    </style>
}

<div class="row">
    <div class="col-lg-12">
        <div class="page-header">
            <h1>@ViewBag.Title</h1>
            <div class="navbar-right" style="margin-top: -56px;">
                <button type="submit" class="btn btn-primary btnSave"><i class="fa  fa-save fa-fw"></i>@save</button>
                <button type="reset" class="btn btn-primary btnReset"><i class="fa fa-eraser fa-fw"></i>@reset</button>
            </div>
        </div>
    </div>
</div>

<!-- /.row -->
@using (Html.BeginForm("Create", "News", FormMethod.Post, new { @id = "createForm" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)

     <div class="row">        
        <div class="col-lg-6">
             <div class="form-group">
                @Html.LabelFor(model => model.Name) <span>*</span>
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", tabindex = "1" })
                <p class="help-block">
                    @Html.ValidationMessageFor(model => Model.Name, null, new { @class = "" })
                </p>
            </div>   
            <div class="form-group">
                @Html.LabelFor(model => model.MetaKey)
                @Html.TextBoxFor(model => model.MetaKey, new { @class = "form-control", tabindex = "1" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Description)
                @Html.TextBoxFor(model => model.Description, new { @class = "form-control", tabindex = "1" })
            </div>
        </div>
         <div class="col-lg-6">
             <div class="form-group">
                @Html.LabelFor(model => model.Picture) (180 x 130)
                <span class="profile-picture">
                    <img id="imgLogo" class="editable img-responsive  editable-empty" src="@Url.Content("~/userfiles/images/default.jpg")" alt="@Model.Picture" />
                    <img id="imgUploaded" class="editable img-responsive  editable-empty" src="" alt="Add new" style="display: none" />
                </span>
                <div class="space-12"></div>
            </div>
            <div class="form-group">
                @(Html.Kendo().Upload()
                            .Multiple(false)
                            .Name("file")
                            .Async(a => a
                                .Save("SaveLogoUpload", "News")
                                .Remove("RemoveLogoUpload", "News")
                                .AutoUpload(true)
                            )
                            .Events(events => events
                                .Select("onSelect")
                                .Success("onSuccess")
                            )
                        )
            </div>   
         </div>
    </div>
    <div class="row">        
        <div class="col-lg-12">                                                    
            <div class="form-group">
                @Html.LabelFor(model => model.Content)
                @Html.TextArea("Content", Model.Content, new { @class = "form-control myckeditor" })
            </div>
        </div>
    </div>
    
    <div class="row">
        <div class="col-lg-12" style="text-align: right">
            <button type="submit" class="btn btn-primary btnSave"><i class="fa  fa-save fa-fw"></i>@save</button>
            <button type="reset" class="btn btn-primary btnReset"><i class="fa fa-eraser fa-fw"></i>@reset</button>
        </div>
    </div>
}
<!-- /.row -->
@section scripts{
    <script src="~/Utility/ckeditor/ckeditor.js"></script>
    <script src="~/Utility/ckfinder/ckfinder.js"></script>

    @Scripts.Render("~/bundles/jsValidation")

    <script type="text/javascript">

        //<![CDATA[
        if (typeof (CKFinder) != 'undefined') CKFinder.setupCKEditor(null, '/utility/ckfinder/');

        var txt = null;
        function loadEditor(objId) {
            var instance = CKEDITOR.instances[objId];
            if (instance != null) {
                CKEDITOR.remove(instance);
                instance.destroy();
                instance = null;
            }

            var newInstance = null;
            newInstance = CKEDITOR.replace(objId, { toolbar: 'Full', width: '100%', height: '300px' }); //toolbar: 'Basic'
            txt = newInstance;
        }
        //]]>

        //event enter
        function keypressHandler(e) {
            if (e.which == 13) {
                $(this).blur();
                $('.btnSave').focus().click();//give your submit an ID
            }
        }
        $('#createForm').keypress(keypressHandler);
        //

        function cancel() {
            var siteUrl = null;
            siteUrl = "/admin/news/";
            window.location = siteUrl;
            return false;

        }

        $(document).ready(function () {
            var textarea = $(".myckeditor");
            if (textarea.length > 0) {
                for (var i = 0; i < textarea.length; i++) {
                    loadEditor(textarea[i].id);
                }
            }

            var nameBool = true;
            var validatable = $("#createForm").kendoValidator({
                onfocusout: true,
                onkeyup: true,
                rules: {
                    categoryName: function (input) {
                        if (input.is("[name=Name]")) {
                            if (input.val() != '') {
                                $.post("/admin/news/CheckNewsTitleExist", {
                                    name: $("#Name").val(),
                                    id: "@Model.Id"
                                }, function (data) { nameBool = data; })
                                return nameBool;
                            }
                        }
                        return true;
                    }
                },
                messages: {
                    categoryName: "Product name exist, Please select category other.",
                }
            }).data("kendoValidator");

            $(".btnSave").click(function () {
                if (validatable.validate() === false) {
                    return false;
                } else {
                    $("#createForm").submit();
                }
            });

        });

        $(".btnReset").click(function () {
            $("#createForm")[0].reset();
        });

        // select image
        function onSelect(e) {
            $.each(e.files, function (index, value) {
                if (!checkImageUpload(value)) {
                    ConfirmMessageBox(null, "Please insert an image file...", function () { }, false);
                    e.preventDefault();
                    return;
                }
            });
        };

        // upload success
        function onSuccess(e) {
            var responseTxt = jQuery.parseJSON(e.XMLHttpRequest.responseText);
            var srcValue = responseTxt.PictureUrl;

            if (srcValue != null) {
                $("#imgLogo").hide();
                $("#imgUploaded").attr('src', srcValue).show();
            }
        }
    </script>
}