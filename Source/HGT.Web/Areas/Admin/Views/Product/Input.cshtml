@model HGT.Core.Models.ProductModel

@using Kendo.Mvc.UI;
@using HGT.Core;
@using HGT.Core.Utility;
@using HGT.Core.Extensions;
@{
    var pageTitle = Model.Id > 0 ? "Cập nhật sản phẩm" : "Thêm sản phẩm mới";
    ViewBag.Title = pageTitle;

    var categories = ViewData["ListCategory"] as List<SelectListItem>;
    var currentSite = "/admin/product";
}

<section class="content-header">
    <ol class="breadcrumb">
        <li><a href="/admin"><i class="fa fa-dashboard"></i>@StringTable.Home</a></li>
        <li><a href="@currentSite">Sản phẩm</a></li>
        <li class="active">@(Model.Id > 0 ? Model.Name : "Thêm sản phẩm mới")</li>
    </ol>
</section>

<section class="content">
    @using (Html.BeginForm("Input", "Product", FormMethod.Post, new { @id = "editForm" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Id)
        <div class="row">
            <div class="col-xs-12" style="padding-bottom: 12px;">
                <button type="button" class="btn btn-danger pull-right" onclick="cancel();"><i class="fa fa-fw fa-credit-card"></i>@StringTable.Cancel</button>
                <button type="submit" class="btn btn-primary pull-right btnSave" style="margin-right: 5px;"><i class="fa fa-fw fa-save"></i>@StringTable.Save</button>
            </div>
        </div>          
        <div class="row form-group">
            <div class="col-md-3  no-padding-right">
                <div class="pull-right">
                    @Html.LabelFor(model => model.Name) <span>*</span>
                </div>
            </div>
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @onblur = string.Format("translateAlias(this, 'Alias', {0})", Model.Id == 0 ? "true" : "false") })
            </div>
            <div class="col-md-4">
                <p class="help-block">
                    @Html.ValidationMessageFor(model => Model.Name, null, new { @class = "" })
                </p>
            </div>
        </div>     
        <div class="row form-group">
            <div class="col-md-3 no-padding-right">
                <div class="pull-right">
                    @Html.LabelFor(model => model.SKU) <span>*</span>
                </div>
            </div>
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.SKU, new { @class = "form-control" })
            </div>
            <div class="col-md-4">
                <p class="help-block">
                    @Html.ValidationMessageFor(model => Model.SKU, null, new { @class = "" })
                </p>
            </div>
        </div>        
        <div class="row form-group">
            <div class="col-md-3  no-padding-right">
                <div class="pull-right">
                    @Html.LabelFor(model => model.Brief)
                </div>
            </div>
            <div class="col-md-9">
                @Html.TextAreaFor(model => model.Brief, new { @class = "form-control", @row = 3 })
            </div>
        </div>        
        <div class="row form-group">
            <div class="col-md-3 no-padding-right">
                <div class="pull-right">
                    <label>Nội dung</label>
                </div>
            </div>
            <div class="col-md-9">
                <div class="nav-tabs-custom">
                    <ul class="nav nav-tabs">
                        <li class="active"><a href="#tab_1" data-toggle="tab"> @Html.LabelFor(model => model.Description)</a></li>
                        <li><a href="#tab_2" data-toggle="tab">@Html.LabelFor(model => model.Capability)</a></li>
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane active" id="tab_1">
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control ckeditor_basic" })
                        </div>
                        <div class="tab-pane" id="tab_2">
                            @Html.TextAreaFor(model => model.Capability, new { @class = "form-control ckeditor_basic" })
                        </div>
                    </div>
                </div>

            </div>
        </div>
        <div class="row form-group">
            <div class="col-md-3  no-padding-right">
                <div class="pull-right">
                    @Html.LabelFor(model => model.Alias) <span>*</span>
                </div>
            </div>
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.Alias, new { @class = "form-control" })
            </div>
            <div class="col-md-4">
                <p class="help-block">@Html.ValidationMessageFor(model => Model.Alias, null, new { })</p>
            </div>
        </div> 
        <div class="row form-group">
            <div class="col-md-3  no-padding-right">
                <div class="pull-right">
                    @Html.LabelFor(model => model.CategoryId) <span>*</span>
                </div>
            </div>
            <div class="col-md-5 ">
                @Html.DropDownListFor(model => model.CategoryId, categories, "--- Select a category ---", new { @class = "form-control" })
            </div>
            <div class="col-md-4">
                <p class="help-block">
                    @Html.ValidationMessageFor(model => Model.CategoryId)
                </p>
            </div>
        </div>    
        <div class="row form-group">
            <div class="col-md-3  no-padding-right">
                <div class="pull-right">
                    @Html.LabelFor(model => model.Thumbnail)
                    <br />
                    (300 x 300)
                </div>
            </div>
            <div class="col-md-9">
                <div class="uploadFile">
                    @Html.TextBoxFor(model => model.ImageUpload, new { @type = "file", @onchange = "uploadImage(this)", @accept = "image/*", @style = "float:left;color:transparent;width:150px;", @datavalextension = "Invalid file extension", @datavalregex = ".jpg|.png|.gif|.bmp$" })
                </div>
                <div class="img_thumb">
                    <img id="ThumbnailPath"  src="@Url.Content(Model.ThumbPath)" />
                    <img id="LoadingImage" src="@Url.Content("~/Areas/Admin/Content/img/loading-violet.gif")" style="display: none;" alt="loading..." />
                </div>
                @Html.HiddenFor(x => x.Thumbnail)
            </div>
        </div>
        <div class="row form-group">
            <div class="col-md-3  no-padding-right">
                <div class="pull-right">
                    @Html.LabelFor(model => model.FileAttach)
                </div>
            </div>
            <div class="col-md-5">
                @if (!string.IsNullOrEmpty(Model.FileAttachName))
                {
                    @Html.TextBoxFor(x => x.FileAttachName, new { @class = "form-control" })
                }
                else
                {
                    @Html.TextBoxFor(x => x.FileAttachName, new { @style = "display:none; margin-bottom: 5px;", @class = "form-control" })
                }
                <div class="uploadFileAttach">
                    @Html.TextBoxFor(model => model.FileAttach, new { @type = "file", @onchange = "uploadFile(this)", @style = "float:left;color:transparent;width:150px;", @datavalextension = "Invalid file extension", @datavalregex = ".pdf|.doc|.docx$" })
                    @Html.HiddenFor(model=>model.FileAttachTemp)
                </div>
                <div class="img_thumb">
                    <img id="LoadingFile" src="@Url.Content("~/Areas/Admin/Content/img/loading-violet.gif")" style="display: none;" alt="loading..." />
                </div>
            </div>
        </div>
        <div class="row form-group">
            <div class="col-md-3  no-padding-right">
                <div class="pull-right">
                    @Html.LabelFor(model => model.IsActive)
                </div>
            </div>
            <div class="col-md-9">
                @Html.CheckBoxFor(model => model.IsActive, new { @class = "multi" })
                <span class="lbl"></span>
            </div>
        </div>
        <div class="row form-group">
            <div class="col-md-3  no-padding-right">
                <div class="pull-right">
                    @Html.LabelFor(model => model.DisplayOrder)
                </div>
            </div>
            <div class="col-md-9">
                @(Html.Kendo().NumericTextBox<int>().Name("DisplayOrder").Format("#").Value(Model.DisplayOrder))
            </div>
        </div>
        <div class="row form-group" style="display: none">
            <div class="col-md-3  no-padding-right">
                <div class="pull-right">
                    @Html.LabelFor(model => model.CallPrice)
                </div>
            </div>
            <div class="col-md-9 ">
                @Html.CheckBoxFor(model => model.CallPrice, new { @class = "multi" })
                <span class="lbl"></span>
            </div>
        </div>            
        <div class="row form-group" style="display: none">
            <div class="col-md-3 no-padding-right">
                <div class="pull-right">
                    @Html.LabelFor(model => model.Price)
                </div>
            </div>
            <div class="col-md-5 ">
                @(Html.Kendo().NumericTextBox<decimal>().Name("Price").Format("#").Value(Model.Price))
            </div>
            <div class="col-md-4">
                <p class="help-block">
                    @Html.ValidationMessageFor(model => Model.Price, null, new { @class = "" })
                </p>
            </div>
        </div>             
        <div class="row form-group">
            <div class="col-md-3  no-padding-right">
                <div class="pull-right">
                    @Html.LabelFor(model => model.EnableGallery)
                </div>
            </div>
            <div class="col-md-9">
                @Html.CheckBoxFor(model => model.EnableGallery, new { @class = "multi" })
                <span class="lbl"></span>
            </div>
        </div>     
        <div class="row">
            <div class="col-xs-12" style="padding-top: 12px;">
                <button type="button" class="btn btn-danger pull-right" onclick="cancel();"><i class="fa fa-fw fa-credit-card"></i>@StringTable.Cancel</button>
                <button type="submit" class="btn btn-primary pull-right btnSave" style="margin-right: 5px;"><i class="fa fa-fw fa-download"></i>@StringTable.Save</button>
            </div>
        </div>        
    }
    <div class="clearfix"></div>    
</section>



<input type="hidden" id="formInformation" data-id="@Model.Id" data-image-upload-url="/admin/product/uploadImage" />
<input type="hidden" id="formUploadFile" data-id="@Model.Id" data-file-upload-url="/admin/product/UploadFile" />
@section scripts{
    <script src="/Utility/ckeditor/ckeditor.js" type="text/javascript"></script>
    <script src="/Utility/ckfinder/ckfinder.js" type="text/javascript"></script>
    <script src="/Utility/hgt.editor.js" type="text/javascript"></script>
    <script src="/Utility/init.editor.js" type="text/javascript"></script>
    @Scripts.Render("~/bundles/jsValidation")

    <script type="text/javascript">
        var frm = $('#editForm');
        $(document).ready(function () {
            if(@Model.Id < 1)
            {
                $("#Alias").attr("readonly", "readonly");
            } 
            
            $(".sidebar-menu li.liProduct").addClass("active");

            $('.btnSave').click(function (e) {

                if (frm.valid() === false) { return false; }

                //set value for content
                var contentHtml = CKEDITOR.instances['Description'].getData();
                $('#Description').html(contentHtml);

                //set value for how it works
                var howitHtml = CKEDITOR.instances['Capability'].getData();
                $('#Capability').html(howitHtml);

                ////set value for key benefits
                //var keyHtml = CKEDITOR.instances['KeyBenefit'].getData();
                //$('#KeyBenefit').html(keyHtml);

                //set value for key benefits
                //var keyHtml = CKEDITOR.instances['CaseStudy'].getData();
                //$('#CaseStudy').html(keyHtml);

                $.ajax({
                    url: frm.attr('action'),
                    type: frm.attr('method'),
                    data: frm.serialize(),
                    dataType: 'json',
                    cache: false,
                    async: false,
                    success: function (data) {
                        if (data.Status == 1)
                            ConfirmMessageBox(null, data.Message, onClosePopup, false);
                        else
                            ConfirmMessageBox(null, data.Message, function () { }, false);
                    },
                    complete: function () { }
                });
                return false;

                // prevent the default event behaviour    
                e.preventDefault();
            });

            frm.submit(function () {
                return false;
            })

        });

        function cancel() { window.location = '@currentSite'; return false; }

        function onClosePopup(e) { window.location = '@currentSite'; return false; }

    </script>

    <script>
        var fInfo = $("#formInformation");
        var UPLOADURL = fInfo.attr("data-image-upload-url");

        function uploadImage(node) {
            if (!validFileExtension($(node), 'datavalregex', 'section.clo_right', 'datavalextension'))
                ConfirmMessageBox(null, "Please insert an image file...", function () { }, false);

            doUploadFile(UPLOADURL, 'ImageUpload', 'LoadingImage', { id: '@(Model.Id)' },
                function (result) {
                    if (result.ImagePath) {
                        $("#Thumbnail").val(result.FileName);
                        $("#ThumbnailPath").attr('src', result.ImagePath).show();
                    }
                });
        }

        
        var fileInfo = $("#formUploadFile");
        var UPLOADFILEURL = fileInfo.attr("data-file-upload-url");

        function uploadFile(node) {
            if (!validFileExtension($(node), 'datavalregex', 'section.clo_right', 'datavalextension'))
                ConfirmMessageBox(null, "Please insert an document file...", function () { }, false);

            doUploadFile(UPLOADFILEURL, 'FileAttach', 'LoadingFile', { id: '@(Model.Id)' },
                function (result) {
                    if (result.FilePath) {
                        $("#FileAttachName").val(result.FileName);
                        $("#FileAttachName").show();
                        $("#FileAttachTemp").val(result.FileName);
                    }
                });
        }

    </script>
    <script src="@Url.Content("~/Areas/Admin/Scripts/uploadImage.js")"></script>
    <script src="@Url.Content("~/Scripts/ajaxfileupload.js")"></script>
}